plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'kotlin-android-extensions'
    id 'dagger.hilt.android.plugin'
    id 'androidx.navigation.safeargs.kotlin'
}

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.1"

    buildFeatures {
        dataBinding true
    }

    defaultConfig {
        applicationId "marc.nguyen.cleanarchitecture"
        minSdkVersion 19
        targetSdkVersion 30
        multiDexEnabled true
        versionCode 1
        versionName "1.0"

        vectorDrawables.useSupportLibrary = true

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        javaCompileOptions {
            annotationProcessorOptions {
                arguments += [
                        "dagger.hilt.disableModulesHaveInstallInCheck": "true",
                        "room.schemaLocation"                         : "$projectDir/schemas".toString(),
                        "room.incremental"                            : "true",
                        "room.expandProjection"                       : "true"]
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    packagingOptions {
        exclude "**/attach_hotspot_windows.dll"
        exclude "META-INF/licenses/**"
        exclude "META-INF/AL2.0"
        exclude "META-INF/LGPL2.1"
    }
    testOptions {
        unitTests.all {
            useJUnitPlatform()
        }
    }
}

dependencies {
    // Multidex
    def multidex_version = "2.0.1"
    implementation "androidx.multidex:multidex:$multidex_version"

    // Coroutines
    def coroutines = '1.3.8-1.4.0-rc'
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines"

    // Arrow Core
    def arrow_version = "0.10.5"
    implementation "io.arrow-kt:arrow-core:$arrow_version"
    implementation "io.arrow-kt:arrow-syntax:$arrow_version"
    kapt "io.arrow-kt:arrow-meta:$arrow_version"

    // Dagger Hilt
    implementation "com.google.dagger:hilt-android:$hilt_version"
    kapt "com.google.dagger:hilt-android-compiler:$hilt_version"
    compileOnly 'com.squareup.inject:assisted-inject-annotations-dagger2:0.5.2'
    kapt 'com.squareup.inject:assisted-inject-processor-dagger2:0.5.2'

    // Android KTX
    implementation 'androidx.core:core-ktx:1.3.1'

    // Room
    def room_version = '2.2.5'
    implementation "androidx.room:room-runtime:$room_version"
    implementation "androidx.room:room-ktx:$room_version"
    kapt "androidx.room:room-compiler:$room_version"

    // SavedState
    def hilt_jetpack = '1.0.0-alpha02'
    implementation "androidx.hilt:hilt-work:$hilt_jetpack"
    kapt "androidx.hilt:hilt-compiler:$hilt_jetpack"

    // Lifecycle
    def lifecycle_version = '2.2.0'
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel-savedstate:$lifecycle_version"

    // Support Libraries
    implementation "androidx.appcompat:appcompat:1.2.0"
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'com.google.android.material:material:1.2.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'androidx.recyclerview:recyclerview:1.1.0'
    implementation "androidx.swiperefreshlayout:swiperefreshlayout:1.1.0"

    // Fragment
    implementation "androidx.fragment:fragment-ktx:1.2.5"

    // Navigation
    implementation "androidx.navigation:navigation-fragment-ktx:$nav_version"
    implementation "androidx.navigation:navigation-ui-ktx:$nav_version"

    // Logging
    implementation 'com.jakewharton.timber:timber:4.7.1'

    // Retrofit for networking
    def retrofit_version = '2.9.0'
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-moshi:$retrofit_version"

    // Moshi for parsing JSON format
    def moshi_version = '1.9.3'
    implementation "com.squareup.moshi:moshi:$moshi_version"
    implementation "com.squareup.moshi:moshi-kotlin:$moshi_version"
    kapt "com.squareup.moshi:moshi-kotlin-codegen:$moshi_version"

    // Glide
    def glide_version = '4.11.0'
    implementation "com.github.bumptech.glide:glide:$glide_version"
    kapt "com.github.bumptech.glide:compiler:$glide_version"

    def kotest_version = '4.1.3'
    testImplementation "io.mockk:mockk:1.10.0"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutines"
    testImplementation "io.kotest:kotest-runner-junit5-jvm:$kotest_version"
    testImplementation "io.kotest:kotest-runner-console-jvm:$kotest_version"
    testImplementation "io.kotest:kotest-assertions-core-jvm:$kotest_version"
    testImplementation "io.kotest:kotest-property-jvm:$kotest_version"

    def test_version = '1.3.0-rc03'
    androidTestImplementation "androidx.test:core:$test_version"
    androidTestImplementation "androidx.test:runner:$test_version"
    androidTestImplementation "androidx.test:rules:$test_version"
    def arch_version = "2.1.0"
    androidTestImplementation "androidx.arch.core:core-testing:$arch_version"
    androidTestImplementation 'androidx.test.ext:junit-ktx:1.1.2-rc03'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0-rc03'
    androidTestImplementation "com.google.dagger:hilt-android-testing:$hilt_version"
    kaptAndroidTest "com.google.dagger:hilt-android-compiler:$hilt_version"
}